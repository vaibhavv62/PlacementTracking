from django.db import models

# Create your models here.


class Student(models.Model):
    rn = models.CharField(max_length=15)
    div = models.CharField(max_length=10)
    name = models.CharField(max_length=100)
    branch = models.CharField(max_length=30)
    mobile = models.CharField(max_length=13)
    email = models.CharField(max_length=100)
    sscm = models.DecimalField(max_digits=6, decimal_places=4)
    hscm = models.DecimalField(max_digits=6, decimal_places=4)
    fe_cgpa = models.DecimalField(max_digits=6, decimal_places=4)
    se_cgpa = models.DecimalField(max_digits=6, decimal_places=4)
    te_cgpa = models.DecimalField(max_digits=6, decimal_places=4)

    def __str__(self):
        return self.name

class StudentProfile(models.Model):
    clg_email = models.EmailField()
    fname = models.CharField(max_length=25)
    mname = models.CharField(max_length=25)
    lname = models.CharField(max_length=25)
    clg = models.CharField(max_length=50)
    prn = models.CharField(max_length=40)
    branch = models.CharField(max_length=40)
    dob = models.DateField()
    gender = models.CharField(max_length=20)
    native_place = models.CharField(max_length=50)
    mother_tounge = models.CharField(max_length=50)
    other_lang = models.CharField(max_length=50)
    mono1 = models.CharField(max_length=20)
    mono2 = models.CharField(max_length=20)
    parent_mono1 = models.CharField(max_length=20)
    parent_mono2 = models.CharField(max_length=20)
    personal_email = models.EmailField()
    parent_email = models.EmailField()
    xth_board = models.CharField(max_length=50)
    xth_passing_yr = models.IntegerField()
    xth_marks_obtained = models.IntegerField()
    xth_marks_outoff = models.IntegerField()
    xth_percentage = models.FloatField()
    xiith_board = models.CharField(max_length=50)
    xiith_passing_yr = models.IntegerField()
    xiith_marks_obtained = models.IntegerField()
    xiith_marks_outoff = models.IntegerField()
    xiith_percentage = models.FloatField()
    diploma_clg = models.CharField(max_length=50)
    diploma_passing_yr = models.IntegerField()
    diploma_marks_obtained = models.IntegerField()
    diploma_marks_outoff = models.IntegerField()
    diploma_percentage = models.FloatField()
    fe1_tot_credits = models.IntegerField()
    fe1_tot_credits_obtained = models.IntegerField()
    fe1_cgpa = models.FloatField()
    fe2_tot_credits = models.IntegerField()
    fe2_tot_credits_obtained = models.IntegerField()
    fe2_cgpa = models.FloatField()
    se1_tot_credits = models.IntegerField()
    se1_tot_credits_obtained = models.IntegerField()
    se1_cgpa = models.FloatField()
    se2_tot_credits = models.IntegerField()
    se2_tot_credits_obtained = models.IntegerField()
    se2_cgpa = models.FloatField()
    te1_tot_credits = models.IntegerField()
    te1_tot_credits_obtained = models.IntegerField()
    te1_cgpa = models.FloatField()
    te2_tot_credits = models.IntegerField()
    te2_tot_credits_obtained = models.IntegerField()
    te2_cgpa = models.FloatField()
    be1_tot_credits = models.IntegerField()
    be1_tot_credits_obtained = models.IntegerField()
    be1_cgpa = models.FloatField()
    be2_tot_credits = models.IntegerField()
    be2_tot_credits_obtained = models.IntegerField()
    be2_cgpa = models.FloatField()
    engg_cgpa = models.FloatField()
    no_of_dead_kt = models.IntegerField()
    no_of_live_kt = models.IntegerField()
    no_of_yd_engg = models.IntegerField()
    no_of_yd_diploma = models.IntegerField()
    no_of_yg = models.IntegerField()
    plan_after_engg = models.CharField(max_length=50)
    te_mini_proj_company = models.CharField(max_length=50)
    te_mini_proj_title = models.CharField(max_length=50)
    certification1 = models.CharField(max_length=50)
    certification2 = models.CharField(max_length=50)
    AddOnCourse1 = models.CharField(max_length=50)
    AddOnCourse2 = models.CharField(max_length=50)
    aadhar_no = models.CharField(max_length=20)
    placed = models.BooleanField(default=False)

    # def __str__(self):
    #     return self.clg_email
